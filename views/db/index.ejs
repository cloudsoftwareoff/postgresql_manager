<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PostgreSQL Manager</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: {
                            50: '#f0f4ff',
                            100: '#e0e9ff',
                            500: '#667eea',
                            600: '#5a67d8',
                            700: '#4c51bf',
                            900: '#2d3748'
                        }
                    },
                    animation: {
                        'fade-in': 'fadeIn 0.5s ease-in',
                        'slide-in': 'slideIn 0.3s ease-out',
                        'pulse-glow': 'pulseGlow 2s infinite'
                    }
                }
            }
        }
    </script>
    <style>
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        @keyframes pulseGlow {
            0%, 100% { box-shadow: 0 0 5px rgba(102, 126, 234, 0.5); }
            50% { box-shadow: 0 0 20px rgba(102, 126, 234, 0.8); }
        }
        .scrollbar-custom::-webkit-scrollbar {
            width: 6px;
        }
        .scrollbar-custom::-webkit-scrollbar-track {
            background: #f1f5f9;
            border-radius: 3px;
        }
        .scrollbar-custom::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 3px;
        }
        .scrollbar-custom::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 min-h-screen">
    <!-- CloudSoftware.tn Branding Header -->
    <div class="bg-gradient-to-r from-gray-800 to-gray-900 text-white text-center py-2 text-sm">
        <span class="flex items-center justify-center space-x-2">
            <i class="fas fa-cloud text-blue-400"></i>
            <span>Powered by <strong>CloudSoftware.tn</strong> - Premium Database Solutions</span>
        </span>
    </div>

    <!-- Header -->
    <header class="bg-white shadow-lg border-b border-gray-200">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-4">
                    <div class="flex items-center justify-center w-12 h-12 bg-gradient-to-r from-primary-500 to-purple-600 rounded-xl">
                        <i class="fas fa-database text-white text-xl"></i>
                    </div>
                    <div>
                        <h1 class="text-3xl font-bold text-gray-900">PostgreSQL Manager</h1>
                        <p class="text-gray-600">Manage your database with ease and style</p>
                    </div>
                </div>
                <div class="flex items-center space-x-4">
                    <button onclick="refreshDashboard()" class="flex items-center space-x-2 px-4 py-2 bg-primary-500 text-white rounded-lg hover:bg-primary-600 transition-colors">
                        <i class="fas fa-sync-alt"></i>
                        <span>Refresh</span>
                    </button>
                </div>
            </div>
        </div>
    </header>

    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Error Message -->
        <div id="errorContainer" class="hidden mb-6">
            <div class="bg-red-50 border border-red-200 rounded-lg p-4 flex items-center space-x-3">
                <i class="fas fa-exclamation-triangle text-red-500"></i>
                <div>
                    <h3 class="text-red-800 font-semibold">Connection Error</h3>
                    <p id="errorMessage" class="text-red-700"></p>
                </div>
            </div>
        </div>

        <!-- Dashboard Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8">
            <!-- Tables List -->
            <div class="lg:col-span-2">
                <div class="bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden">
                    <div class="px-6 py-4 border-b border-gray-200 bg-gradient-to-r from-primary-500 to-purple-600">
                        <div class="flex items-center justify-between">
                            <h2 class="text-xl font-semibold text-white flex items-center space-x-2">
                                <i class="fas fa-table"></i>
                                <span>Database Tables</span>
                            </h2>
                            <div class="flex items-center space-x-4">
                                <!-- Search Input -->
                                <div class="relative">
                                    <input 
                                        type="text" 
                                        id="tableSearch" 
                                        placeholder="Search tables..." 
                                        class="bg-white/20 text-white placeholder-white/70 px-3 py-1 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-white/30 w-48"
                                        onkeyup="filterTables()"
                                    >
                                    <i class="fas fa-search absolute right-3 top-1/2 transform -translate-y-1/2 text-white/70 text-sm"></i>
                                </div>
                                <!-- View Toggle -->
                                <div class="flex items-center bg-white/20 rounded-lg p-1">
                                    <button 
                                        id="gridViewBtn" 
                                        onclick="setTableView('grid')" 
                                        class="px-2 py-1 rounded text-sm transition-colors bg-white/30 text-white"
                                    >
                                        <i class="fas fa-th-large"></i>
                                    </button>
                                    <button 
                                        id="listViewBtn" 
                                        onclick="setTableView('list')" 
                                        class="px-2 py-1 rounded text-sm transition-colors text-white/70 hover:text-white"
                                    >
                                        <i class="fas fa-list"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="p-6">
                        <div id="tablesContainer" class="scrollbar-custom" style="max-height: 600px; overflow-y: auto;">
                            <!-- Tables will be loaded here -->
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Stats -->
            <div class="space-y-6">
                <div class="bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden">
                    <div class="px-6 py-4 border-b border-gray-200 bg-gradient-to-r from-green-500 to-teal-600">
                        <h2 class="text-xl font-semibold text-white flex items-center space-x-2">
                            <i class="fas fa-chart-bar"></i>
                            <span>Quick Stats</span>
                        </h2>
                    </div>
                    <div class="p-6 space-y-4">
                        <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                            <div class="flex items-center space-x-3">
                                <div class="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center">
                                    <i class="fas fa-table text-blue-600"></i>
                                </div>
                                <div>
                                    <p class="text-sm text-gray-600">Total Tables</p>
                                    <p id="tableCount" class="text-xl font-bold text-gray-900">0</p>
                                </div>
                            </div>
                        </div>
                        <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                            <div class="flex items-center space-x-3">
                                <div class="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center">
                                    <i class="fas fa-check-circle text-green-600"></i>
                                </div>
                                <div>
                                    <p class="text-sm text-gray-600">Connection</p>
                                    <p id="connectionStatus" class="text-xl font-bold text-green-600">Connected</p>
                                </div>
                            </div>
                        </div>
                        <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                            <div class="flex items-center space-x-3">
                                <div class="w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center">
                                    <i class="fas fa-database text-purple-600"></i>
                                </div>
                                <div>
                                    <p class="text-sm text-gray-600">DB Size</p>
                                    <p id="dbSize" class="text-xl font-bold text-gray-900">-</p>
                                </div>
                            </div>
                        </div>
                        <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                            <div class="flex items-center space-x-3">
                                <div class="w-10 h-10 bg-yellow-100 rounded-lg flex items-center justify-center">
                                    <i class="fas fa-eye text-yellow-600"></i>
                                </div>
                                <div>
                                    <p class="text-sm text-gray-600">Visible Tables</p>
                                    <p id="visibleTableCount" class="text-xl font-bold text-gray-900">0</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- SQL Query Console -->
        <div class="bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden">
            <div class="px-6 py-4 border-b border-gray-200 bg-gradient-to-r from-indigo-500 to-blue-600">
                <h2 class="text-xl font-semibold text-white flex items-center space-x-2">
                    <i class="fas fa-code"></i>
                    <span>SQL Query Console</span>
                </h2>
            </div>
            <div class="p-6">
                <!-- Query Suggestions -->
                <div class="flex flex-wrap gap-2 mb-4">
                    <button onclick="insertQuery('SELECT * FROM ')" class="px-3 py-1 bg-gray-100 hover:bg-primary-100 text-gray-700 hover:text-primary-700 rounded-full text-sm transition-colors">
                        <i class="fas fa-eye mr-1"></i>SELECT
                    </button>
                    <button onclick="insertQuery('INSERT INTO ')" class="px-3 py-1 bg-gray-100 hover:bg-green-100 text-gray-700 hover:text-green-700 rounded-full text-sm transition-colors">
                        <i class="fas fa-plus mr-1"></i>INSERT
                    </button>
                    <button onclick="insertQuery('UPDATE ')" class="px-3 py-1 bg-gray-100 hover:bg-yellow-100 text-gray-700 hover:text-yellow-700 rounded-full text-sm transition-colors">
                        <i class="fas fa-edit mr-1"></i>UPDATE
                    </button>
                    <button onclick="insertQuery('DELETE FROM ')" class="px-3 py-1 bg-gray-100 hover:bg-red-100 text-gray-700 hover:text-red-700 rounded-full text-sm transition-colors">
                        <i class="fas fa-trash mr-1"></i>DELETE
                    </button>
                    <button onclick="insertQuery('CREATE TABLE ')" class="px-3 py-1 bg-gray-100 hover:bg-purple-100 text-gray-700 hover:text-purple-700 rounded-full text-sm transition-colors">
                        <i class="fas fa-table mr-1"></i>CREATE TABLE
                    </button>
                </div>

                <!-- Query Form -->
                <form id="queryForm" class="space-y-4">
                    <div>
                        <textarea 
                            id="sqlQuery" 
                            name="query" 
                            rows="8"
                            class="w-full p-4 border border-gray-300 rounded-lg bg-gray-50 font-mono text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500 resize-vertical"
                            placeholder="-- Enter your SQL query here
-- Example: SELECT * FROM your_table_name LIMIT 10;
-- Press Ctrl+Enter to execute"
                        ></textarea>
                    </div>
                    
                    <div class="flex flex-wrap gap-3">
                        <button type="submit" class="flex items-center space-x-2 px-6 py-2 bg-primary-500 text-white rounded-lg hover:bg-primary-600 transition-colors">
                            <i class="fas fa-play"></i>
                            <span>Execute Query</span>
                        </button>
                        <button type="button" onclick="clearQuery()" class="flex items-center space-x-2 px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors">
                            <i class="fas fa-eraser"></i>
                            <span>Clear</span>
                        </button>
                        <button type="button" onclick="formatQuery()" class="flex items-center space-x-2 px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors">
                            <i class="fas fa-indent"></i>
                            <span>Format</span>
                        </button>
                    </div>
                </form>

                <!-- Query Results -->
                <div id="queryResultContainer" class="mt-6"></div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer class="bg-gradient-to-r from-gray-800 to-gray-900 text-white mt-16">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                <div class="flex items-center space-x-3">
                    <div class="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
                        <i class="fas fa-cloud text-white"></i>
                    </div>
                    <div>
                        <h3 class="text-lg font-bold">CloudSoftware.tn</h3>
                        <p class="text-gray-400 text-sm">Database Solutions</p>
                    </div>
                </div>
                <div class="text-center">
                    <p class="text-gray-400 text-sm">
                        Professional PostgreSQL Management
                    </p>
                    <p class="text-gray-500 text-xs mt-1">
                        Streamline your database operations
                    </p>
                </div>
                <div class="text-right">
                    <p class="text-gray-400 text-sm">
                        © 2025 CloudSoftware.tn
                    </p>
                    <p class="text-gray-500 text-xs mt-1">
                        All rights reserved
                    </p>
                </div>
            </div>
        </div>
    </footer>

    <!-- Notification Container -->
    <div id="notificationContainer" class="fixed top-4 right-4 z-50 space-y-2"></div>

    <script>
        // Global variables
        let tables = [];
        let filteredTables = [];
        let dbStats = {};
        let currentView = 'grid'; // 'grid' or 'list'

        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            loadDashboardData();
            initializeQueryForm();
        });

        // Load dashboard data
        async function loadDashboardData() {
            try {
                showLoading();
                
                // Load tables
                const tablesResponse = await fetch('/api/db/tables');
                if (tablesResponse.ok) {
                    const tablesData = await tablesResponse.json();
                    tables = tablesData.tables || [];
                    filteredTables = [...tables];
                    renderTables();
                    updateStats();
                }
                
                // Load database info
                const dbInfoResponse = await fetch('/api/db/database-info');
                if (dbInfoResponse.ok) {
                    dbStats = await dbInfoResponse.json();
                    updateDatabaseStats();
                }
                
                hideError();
            } catch (error) {
                console.error('Error loading dashboard data:', error);
                showError('Failed to load dashboard data. Please check your connection.');
            } finally {
                hideLoading();
            }
        }

        // Filter tables based on search
        function filterTables() {
            const searchTerm = document.getElementById('tableSearch').value.toLowerCase();
            filteredTables = tables.filter(table => 
                table.name.toLowerCase().includes(searchTerm)
            );
            renderTables();
            updateVisibleTableCount();
        }

        // Set table view (grid or list)
        function setTableView(view) {
            currentView = view;
            
            // Update button states
            document.getElementById('gridViewBtn').className = view === 'grid' 
                ? 'px-2 py-1 rounded text-sm transition-colors bg-white/30 text-white'
                : 'px-2 py-1 rounded text-sm transition-colors text-white/70 hover:text-white';
            
            document.getElementById('listViewBtn').className = view === 'list'
                ? 'px-2 py-1 rounded text-sm transition-colors bg-white/30 text-white'
                : 'px-2 py-1 rounded text-sm transition-colors text-white/70 hover:text-white';
            
            renderTables();
        }

        // Render tables list
        function renderTables() {
            const container = document.getElementById('tablesContainer');
            
            if (filteredTables.length === 0) {
                const emptyMessage = tables.length === 0 ? 'No tables found' : 'No tables match your search';
                const emptySubtext = tables.length === 0 ? 'Create your first table using the SQL query panel' : 'Try adjusting your search terms';
                
                container.innerHTML = `
                    <div class="text-center py-12">
                        <i class="fas fa-table text-6xl text-gray-300 mb-4"></i>
                        <h3 class="text-lg font-medium text-gray-900 mb-2">${emptyMessage}</h3>
                        <p class="text-gray-500">${emptySubtext}</p>
                    </div>
                `;
                return;
            }

            if (currentView === 'grid') {
                renderGridView(container);
            } else {
                renderListView(container);
            }
        }

        // Render grid view
        function renderGridView(container) {
            const tablesHtml = filteredTables.map((table, index) => `
                <div class="group relative bg-gradient-to-r from-primary-500 to-purple-600 rounded-lg p-4 hover:shadow-lg transition-all duration-300 hover:scale-105 animate-fade-in" style="animation-delay: ${index * 0.05}s">
                    <a href="/api/db/view/${encodeURIComponent(table.name)}" class="flex items-center justify-between text-white">
                        <div class="flex items-center space-x-3">
                            <i class="fas fa-table text-xl"></i>
                            <div>
                                <h3 class="font-semibold text-lg truncate" title="${table.name}">${table.name}</h3>
                                <p class="text-sm opacity-80">${table.columnCount || 0} columns</p>
                            </div>
                        </div>
                        <div class="flex items-center space-x-2">
                            <i class="fas fa-arrow-right opacity-0 group-hover:opacity-100 transition-opacity"></i>
                        </div>
                    </a>
                </div>
            `).join('');

            container.innerHTML = `<div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4">${tablesHtml}</div>`;
        }

        // Render list view
        function renderListView(container) {
            const tablesHtml = filteredTables.map((table, index) => `
                <div class="group flex items-center justify-between p-3 bg-gray-50 hover:bg-gray-100 rounded-lg transition-colors animate-fade-in border-l-4 border-primary-500" style="animation-delay: ${index * 0.02}s">
                    <div class="flex items-center space-x-3">
                        <div class="w-10 h-10 bg-gradient-to-r from-primary-500 to-purple-600 rounded-lg flex items-center justify-center">
                            <i class="fas fa-table text-white text-sm"></i>
                        </div>
                        <div>
                            <h3 class="font-medium text-gray-900" title="${table.name}">${table.name}</h3>
                            <p class="text-sm text-gray-500">${table.columnCount || 0} columns</p>
                        </div>
                    </div>
                    <div class="flex items-center space-x-2">
                        <a href="/api/db/view/${encodeURIComponent(table.name)}" class="flex items-center space-x-2 px-3 py-1 bg-primary-500 text-white rounded-md hover:bg-primary-600 transition-colors text-sm">
                            <i class="fas fa-eye"></i>
                            <span>View</span>
                        </a>
                        <button onclick="insertQuery('SELECT * FROM ${table.name} LIMIT 10;')" class="flex items-center space-x-2 px-3 py-1 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors text-sm">
                            <i class="fas fa-search"></i>
                            <span>Query</span>
                        </button>
                    </div>
                </div>
            `).join('');

            container.innerHTML = `<div class="space-y-2">${tablesHtml}</div>`;
        }

        // Update statistics
        function updateStats() {
            document.getElementById('tableCount').textContent = tables.length;
            updateVisibleTableCount();
        }

        // Update visible table count
        function updateVisibleTableCount() {
            document.getElementById('visibleTableCount').textContent = filteredTables.length;
        }

        // Update database statistics
        function updateDatabaseStats() {
            if (dbStats.database_size) {
                document.getElementById('dbSize').textContent = dbStats.database_size;
            }
        }

        // Initialize query form
        function initializeQueryForm() {
            // Add keyboard shortcut for query execution
            document.getElementById('sqlQuery').addEventListener('keydown', function(e) {
                if (e.ctrlKey && e.key === 'Enter') {
                    e.preventDefault();
                    document.getElementById('queryForm').dispatchEvent(new Event('submit'));
                }
            });

            // Query form submission
            document.getElementById('queryForm').addEventListener('submit', async function(e) {
                e.preventDefault();
                await executeQuery();
            });
        }

        // Execute SQL query
        async function executeQuery() {
            const query = document.getElementById('sqlQuery').value.trim();
            
            if (!query) {
                showNotification('Please enter a SQL query.', 'warning');
                return;
            }

            const resultContainer = document.getElementById('queryResultContainer');
            resultContainer.innerHTML = `
                <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 flex items-center space-x-3">
                    <i class="fas fa-spinner fa-spin text-blue-500"></i>
                    <span class="text-blue-700 font-medium">Executing query...</span>
                </div>
            `;

            try {
                const response = await fetch('/api/db/run-query', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ query: query })
                });

                const data = await response.json();

                if (response.ok) {
                    renderQueryResult(data);
                    showNotification('Query executed successfully!', 'success');
                    
                    // Refresh tables list if it was a DDL operation
                    if (query.toLowerCase().includes('create table') || query.toLowerCase().includes('drop table')) {
                        loadDashboardData();
                    }
                } else {
                    renderQueryError(data);
                    showNotification('Query execution failed!', 'error');
                }
            } catch (error) {
                console.error('Fetch error:', error);
                renderNetworkError();
                showNotification('Network error occurred!', 'error');
            }
        }

        // Render query result
        function renderQueryResult(data) {
            const resultContainer = document.getElementById('queryResultContainer');
            let resultHtml = `
                <div class="bg-green-50 border border-green-200 rounded-lg overflow-hidden">
                    <div class="px-4 py-3 bg-green-100 border-b border-green-200">
                        <h3 class="text-green-800 font-semibold flex items-center space-x-2">
                            <i class="fas fa-check-circle"></i>
                            <span>Query Result</span>
                        </h3>
                    </div>
                    <div class="p-4">
            `;
            
            if (data.rows && data.rows.length > 0) {
                resultHtml += `
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                `;
                
                // Header row
                Object.keys(data.rows[0]).forEach(key => {
                    resultHtml += `<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">${escapeHtml(key)}</th>`;
                });
                resultHtml += '</tr></thead><tbody class="bg-white divide-y divide-gray-200">';
                
                // Data rows
                data.rows.forEach((row, index) => {
                    resultHtml += `<tr class="${index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}">`;
                    Object.values(row).forEach(value => {
                        const displayValue = value === null ? 'NULL' : 
                                           typeof value === 'object' ? JSON.stringify(value) : String(value);
                        const cellClass = value === null ? 'text-gray-400 italic' : 'text-gray-900';
                        resultHtml += `<td class="px-6 py-4 whitespace-nowrap text-sm ${cellClass}" title="${escapeHtml(displayValue)}">${escapeHtml(displayValue.length > 50 ? displayValue.substring(0, 50) + '...' : displayValue)}</td>`;
                    });
                    resultHtml += '</tr>';
                });
                resultHtml += '</tbody></table></div>';
                
                resultHtml += `
                    <div class="mt-4 flex flex-wrap gap-4 text-sm text-gray-600">
                        <div class="flex items-center space-x-2">
                            <i class="fas fa-list-ol"></i>
                            <span>Rows: ${data.rowCount}</span>
                        </div>
                        <div class="flex items-center space-x-2">
                            <i class="fas fa-terminal"></i>
                            <span>Command: ${data.command || 'N/A'}</span>
                        </div>
                        ${data.executionTime ? `
                        <div class="flex items-center space-x-2">
                            <i class="fas fa-clock"></i>
                            <span>Time: ${data.executionTime}ms</span>
                        </div>
                        ` : ''}
                    </div>
                `;
            } else {
                resultHtml += `
                    <div class="text-green-700">
                        <i class="fas fa-check mr-2"></i>
                        Query executed successfully (${data.command || 'N/A'}). No rows returned.
                `;
                if (data.rowCount !== undefined) {
                    resultHtml += `<br><strong>Rows affected:</strong> ${data.rowCount}`;
                }
                resultHtml += '</div>';
            }
            
            resultHtml += '</div></div>';
            resultContainer.innerHTML = resultHtml;
        }

        // Render query error
        function renderQueryError(data) {
            const resultContainer = document.getElementById('queryResultContainer');
            resultContainer.innerHTML = `
                <div class="bg-red-50 border border-red-200 rounded-lg p-4">
                    <div class="flex items-start space-x-3">
                        <i class="fas fa-exclamation-triangle text-red-500 mt-1"></i>
                        <div class="flex-1">
                            <h3 class="text-red-800 font-semibold">Query Error</h3>
                            <p class="text-red-700 mt-1">${escapeHtml(data.error || 'Unknown error')}</p>
                            ${data.details ? `<pre class="mt-2 text-sm text-red-600 bg-red-100 p-2 rounded overflow-x-auto">${escapeHtml(data.details)}</pre>` : ''}
                        </div>
                    </div>
                </div>
            `;
        }

        // Render network error
        function renderNetworkError() {
            const resultContainer = document.getElementById('queryResultContainer');
            resultContainer.innerHTML = `
                <div class="bg-red-50 border border-red-200 rounded-lg p-4">
                    <div class="flex items-center space-x-3">
                        <i class="fas fa-exclamation-triangle text-red-500"></i>
                        <div>
                            <h3 class="text-red-800 font-semibold">Network Error</h3>
                            <p class="text-red-700">Failed to execute query. Please check your connection.</p>
                        </div>
                    </div>
                </div>
            `;
        }

        // Utility functions
        function insertQuery(text) {
            const textarea = document.getElementById('sqlQuery');
            const start = textarea.selectionStart;
            const end = textarea.selectionEnd;
            const currentValue = textarea.value;
            
            textarea.value = currentValue.substring(0, start) + text + currentValue.substring(end);
            textarea.selectionStart = textarea.selectionEnd = start + text.length;
            textarea.focus();
        }

        function clearQuery() {
            document.getElementById('sqlQuery').value = '';
            document.getElementById('queryResultContainer').innerHTML = '';
        }

        function formatQuery() {
            const textarea = document.getElementById('sqlQuery');
            let query = textarea.value;
            
            // Basic SQL formatting
            query = query.replace(/\s+/g, ' ')
                        .replace(/\s*,\s*/g, ',\n    ')
                        .replace(/\s+(FROM|WHERE|GROUP BY|ORDER BY|HAVING|JOIN|LEFT JOIN|RIGHT JOIN|INNER JOIN)\s+/gi, '\n$1 ')
                        .replace(/\s*;\s*/g, ';\n\n')
                        .trim();
            
            textarea.value = query;
        }

        function escapeHtml(text) {
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML;
        }

        function refreshDashboard() {
            loadDashboardData();
            showNotification('Dashboard refreshed!', 'success');
        }

        // UI Helper functions
        function showLoading() {
            // Implementation can be added based on needs
        }

        function hideLoading() {
            // Implementation can be added based on needs
        }

        function showError(message) {
            const errorContainer = document.getElementById('errorContainer');
            const errorMessage = document.getElementById('errorMessage');
            errorMessage.textContent = message;
            errorContainer.classList.remove('hidden');
            document.getElementById('connectionStatus').textContent = 'Error';
            document.getElementById('connectionStatus').className = 'text-xl font-bold text-red-600';
        }

        function hideError() {
            document.getElementById('errorContainer').classList.add('hidden');
        }

        // Notification system
        function showNotification(message, type) {
            const container = document.getElementById('notificationContainer');
            const notification = document.createElement('div');
            
            const colors = {
                success: 'bg-green-500',
                error: 'bg-red-500',
                warning: 'bg-yellow-500',
                info: 'bg-blue-500'
            };
            
            notification.className = `${colors[type]} text-white px-6 py-3 rounded-lg shadow-lg flex items-center space-x-3 animate-slide-in max-w-md`;
            notification.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check' : type === 'error' ? 'times' : type === 'warning' ? 'exclamation-triangle' : 'info-circle'}"></i>
                <span>${message}</span>
            `;
            
            container.appendChild(notification);
            
            // Auto remove after 3 seconds
            setTimeout(() => {
                notification.style.transform = 'translateX(100%)';
                notification.style.opacity = '0';
                setTimeout(() => {
                    container.removeChild(notification);
                }, 300);
            }, 3000);
        }
    </script>
</body>
</html>